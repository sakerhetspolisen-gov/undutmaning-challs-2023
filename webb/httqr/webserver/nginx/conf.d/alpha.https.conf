server {
    listen                  443 default_server ssl;
    server_name             _;
    server_tokens           off;
    charset                 utf-8;
    client_max_body_size    1M;

    if ($request_method !~ ^(GET|POST|PUT|DELETE|HEAD|OPTIONS)$ )
    {
        return 405;
    }

    ssl_dhparam             /etc/nginx/ssl/dhparam.pem;
    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/private/server.key;

    ssl_protocols           TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;

    ssl_ecdh_curve          X25519:prime256v1:secp384r1:secp521r1;
    ssl_session_timeout     10m;
    ssl_session_cache       shared:SSL:10m;
    ssl_session_tickets     off; # Requires nginx >= 1.5.9
    # ssl_stapling          on; # Requires nginx >= 1.3.7
    # ssl_stapling_verify   on; # Requires nginx => 1.3.7
    resolver                9.9.9.9 149.112.112.112 valid=300s; # Quad9, with and without filtering
    resolver_timeout        5s;

    add_header     X-Frame-Options         "SAMEORIGIN";
    add_header     X-XSS-Protection        "1; mode=block";
    add_header     X-Content-Type-Options  nosniff;

    proxy_set_header X-CLIENT-REAL-IP $remote_addr;

    # --------------- >>>WEBAPP_CONTENT_ACCESS_START<<< -----------------------
    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Authorization ""; # Do not send full authorization string
        proxy_set_header X-Forwarded-User $remote_user;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://uvicorn-alpha;
    }
    # ---------------- >>>WEBAPP_CONTENT_ACCESS_END<<< -----------------------
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream uvicorn-alpha {
    server unix:/tmp/uvicorn-alpha.sock;
}


