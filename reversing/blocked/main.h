#include <set>

#define ARR_SIZE(x) sizeof(x)/sizeof(x[0])

const int flag[] = {};

struct Value
{
    int x1;
    int y1;
    int x2;
    int y2;
};

Value x(int k); // derive_values
Value y(std::set<int>& used); // find_pointers
int* encode(const char* encode);

#ifdef MAKE_FLAG
    void generate_flag(const char* f);
#endif

#ifdef SOLVE
    const char* solve();
#endif
